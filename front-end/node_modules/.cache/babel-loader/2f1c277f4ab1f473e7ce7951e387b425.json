{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport rootReducers from '../reducers/index';\nexport const store = configureStore({\n  reducer: rootReducers,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }).concat(logger)\n});","map":{"version":3,"names":["configureStore","logger","rootReducers","store","reducer","middleware","getDefaultMiddleware","serializableCheck","concat"],"sources":["/Users/fgriguol/proyect/Meli/front-end/src/app/store.ts"],"sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nimport rootReducers from '../reducers/index';\n\nexport const store = configureStore({\n  reducer: rootReducers,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({serializableCheck: false}).concat(logger),\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n"],"mappings":"AAAA,SAASA,cAAT,QAAoD,kBAApD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAEF,YADyB;EAElCG,UAAU,EAAGC,oBAAD,IAA0BA,oBAAoB,CAAC;IAACC,iBAAiB,EAAE;EAApB,CAAD,CAApB,CAAiDC,MAAjD,CAAwDP,MAAxD;AAFJ,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}